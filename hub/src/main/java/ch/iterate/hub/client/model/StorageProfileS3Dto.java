/*
 * hub-backend API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.iterate.hub.client.model;

import org.openapitools.jackson.nullable.JsonNullable;

import java.util.Arrays;
import java.util.Objects;
import java.util.UUID;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;


/**
 * StorageProfileS3Dto
 */
@JsonPropertyOrder({
        StorageProfileS3Dto.JSON_PROPERTY_ID,
        StorageProfileS3Dto.JSON_PROPERTY_NAME,
        StorageProfileS3Dto.JSON_PROPERTY_PROTOCOL,
        StorageProfileS3Dto.JSON_PROPERTY_ARCHIVED,
        StorageProfileS3Dto.JSON_PROPERTY_SCHEME,
        StorageProfileS3Dto.JSON_PROPERTY_HOSTNAME,
        StorageProfileS3Dto.JSON_PROPERTY_PORT,
        StorageProfileS3Dto.JSON_PROPERTY_WITH_PATH_STYLE_ACCESS_ENABLED,
        StorageProfileS3Dto.JSON_PROPERTY_STORAGE_CLASS
})
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StorageProfileS3Dto {
    public static final String JSON_PROPERTY_ID = "id";
    private UUID id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_PROTOCOL = "protocol";
    private Protocol protocol;

    public static final String JSON_PROPERTY_ARCHIVED = "archived";
    private Boolean archived;

    public static final String JSON_PROPERTY_SCHEME = "scheme";
    private JsonNullable<String> scheme = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_HOSTNAME = "hostname";
    private JsonNullable<String> hostname = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_PORT = "port";
    private JsonNullable<Integer> port = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_WITH_PATH_STYLE_ACCESS_ENABLED = "withPathStyleAccessEnabled";
    private Boolean withPathStyleAccessEnabled = false;

    public static final String JSON_PROPERTY_STORAGE_CLASS = "storageClass";
    private S3STORAGECLASSES storageClass;

    public StorageProfileS3Dto() {
    }

    public StorageProfileS3Dto id(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Technical identifier for a storage profile. Must be unique UUID. Clients will use this as vendor in profile and provider in vault bookmark
     *
     * @return id
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Technical identifier for a storage profile. Must be unique UUID. Clients will use this as vendor in profile and provider in vault bookmark")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public UUID getId() {
        return id;
    }


    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(UUID id) {
        this.id = id;
    }


    public StorageProfileS3Dto name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Displayed when choosing type of a new vault in dropdown.
     *
     * @return name
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Displayed when choosing type of a new vault in dropdown.")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getName() {
        return name;
    }


    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }


    public StorageProfileS3Dto protocol(Protocol protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Storage protocol: S3 (permanent credentials) or S3STS (STS).
     *
     * @return protocol
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Storage protocol: S3 (permanent credentials) or S3STS (STS).")
    @JsonProperty(JSON_PROPERTY_PROTOCOL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Protocol getProtocol() {
        return protocol;
    }


    @JsonProperty(JSON_PROPERTY_PROTOCOL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProtocol(Protocol protocol) {
        this.protocol = protocol;
    }


    public StorageProfileS3Dto archived(Boolean archived) {
        this.archived = archived;
        return this;
    }

    /**
     * For archived storage profiles, no vaults can be created any more.
     *
     * @return archived
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "For archived storage profiles, no vaults can be created any more.")
    @JsonProperty(JSON_PROPERTY_ARCHIVED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Boolean getArchived() {
        return archived;
    }


    @JsonProperty(JSON_PROPERTY_ARCHIVED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setArchived(Boolean archived) {
        this.archived = archived;
    }


    public StorageProfileS3Dto scheme(String scheme) {
        this.scheme = JsonNullable.<String>of(scheme);
        return this;
    }

    /**
     * Scheme of S3 endpoint for template upload/bucket creation. Defaults to default for protocol, i.e. https in most cases.
     *
     * @return scheme
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "https", value = "Scheme of S3 endpoint for template upload/bucket creation. Defaults to default for protocol, i.e. https in most cases.")
  @JsonIgnore

    public String getScheme() {
        return scheme.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SCHEME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<String> getScheme_JsonNullable() {
        return scheme;
    }

    @JsonProperty(JSON_PROPERTY_SCHEME)
    public void setScheme_JsonNullable(JsonNullable<String> scheme) {
        this.scheme = scheme;
    }

    public void setScheme(String scheme) {
        this.scheme = JsonNullable.<String>of(scheme);
    }


    public StorageProfileS3Dto hostname(String hostname) {
        this.hostname = JsonNullable.<String>of(hostname);
        return this;
    }

    /**
     * Hostname S3 endpoint for template upload/bucket creation. Defaults to AWS SDK default.
     *
     * @return hostname
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "s3-us-gov-west-1.amazonaws.com", value = "Hostname S3 endpoint for template upload/bucket creation. Defaults to AWS SDK default.")
    @JsonIgnore

    public String getHostname() {
        return hostname.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<String> getHostname_JsonNullable() {
        return hostname;
    }

    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    public void setHostname_JsonNullable(JsonNullable<String> hostname) {
        this.hostname = hostname;
    }

    public void setHostname(String hostname) {
        this.hostname = JsonNullable.<String>of(hostname);
    }


    public StorageProfileS3Dto port(Integer port) {
        this.port = JsonNullable.<Integer>of(port);
        return this;
    }

    /**
     * Port S3 endpoint for template upload/bucket creation. Defaults to default port for scheme.
     *
     * @return port
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "443", value = "Port S3 endpoint for template upload/bucket creation. Defaults to default port for scheme.")
    @JsonIgnore

    public Integer getPort() {
        return port.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_PORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getPort_JsonNullable() {
        return port;
    }

    @JsonProperty(JSON_PROPERTY_PORT)
    public void setPort_JsonNullable(JsonNullable<Integer> port) {
        this.port = port;
    }

    public void setPort(Integer port) {
        this.port = JsonNullable.<Integer>of(port);
    }


    public StorageProfileS3Dto withPathStyleAccessEnabled(Boolean withPathStyleAccessEnabled) {
        this.withPathStyleAccessEnabled = withPathStyleAccessEnabled;
        return this;
    }

    /**
     * Whether to use path style for S3 endpoint for template upload/bucket creation.
     *
     * @return withPathStyleAccessEnabled
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "false", value = "Whether to use path style for S3 endpoint for template upload/bucket creation.")
    @JsonProperty(JSON_PROPERTY_WITH_PATH_STYLE_ACCESS_ENABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getWithPathStyleAccessEnabled() {
        return withPathStyleAccessEnabled;
    }


    @JsonProperty(JSON_PROPERTY_WITH_PATH_STYLE_ACCESS_ENABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWithPathStyleAccessEnabled(Boolean withPathStyleAccessEnabled) {
        this.withPathStyleAccessEnabled = withPathStyleAccessEnabled;
    }


    public StorageProfileS3Dto storageClass(S3STORAGECLASSES storageClass) {
        this.storageClass = storageClass;
        return this;
    }

    /**
     * Storage class for upload. Defaults to STANDARD
     *
     * @return storageClass
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(example = "STANDARD", required = true, value = "Storage class for upload. Defaults to STANDARD")
    @JsonProperty(JSON_PROPERTY_STORAGE_CLASS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public S3STORAGECLASSES getStorageClass() {
        return storageClass;
    }


    @JsonProperty(JSON_PROPERTY_STORAGE_CLASS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStorageClass(S3STORAGECLASSES storageClass) {
        this.storageClass = storageClass;
    }


    /**
     * Return true if this StorageProfileS3Dto object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if(this == o) {
            return true;
        }
        if(o == null || getClass() != o.getClass()) {
            return false;
        }
        StorageProfileS3Dto storageProfileS3Dto = (StorageProfileS3Dto) o;
        return Objects.equals(this.id, storageProfileS3Dto.id) &&
                Objects.equals(this.name, storageProfileS3Dto.name) &&
                Objects.equals(this.protocol, storageProfileS3Dto.protocol) &&
                Objects.equals(this.archived, storageProfileS3Dto.archived) &&
                equalsNullable(this.scheme, storageProfileS3Dto.scheme) &&
                equalsNullable(this.hostname, storageProfileS3Dto.hostname) &&
                equalsNullable(this.port, storageProfileS3Dto.port) &&
                Objects.equals(this.withPathStyleAccessEnabled, storageProfileS3Dto.withPathStyleAccessEnabled) &&
                Objects.equals(this.storageClass, storageProfileS3Dto.storageClass);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, protocol, archived, hashCodeNullable(scheme), hashCodeNullable(hostname), hashCodeNullable(port), withPathStyleAccessEnabled, storageClass);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if(a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class StorageProfileS3Dto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
        sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
        sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
        sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
        sb.append("    port: ").append(toIndentedString(port)).append("\n");
        sb.append("    withPathStyleAccessEnabled: ").append(toIndentedString(withPathStyleAccessEnabled)).append("\n");
        sb.append("    storageClass: ").append(toIndentedString(storageClass)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

