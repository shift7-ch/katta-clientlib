/*
 * hub-backend API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.katta.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import cloud.katta.client.JSON;


/**
 * TrustedUserDto
 */
@JsonPropertyOrder({
  TrustedUserDto.JSON_PROPERTY_TRUSTED_USER_ID,
  TrustedUserDto.JSON_PROPERTY_SIGNATURE_CHAIN
})
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class TrustedUserDto {
  public static final String JSON_PROPERTY_TRUSTED_USER_ID = "trustedUserId";
  @javax.annotation.Nullable
  private String trustedUserId;

  public static final String JSON_PROPERTY_SIGNATURE_CHAIN = "signatureChain";
  @javax.annotation.Nullable
  private List<String> signatureChain = new ArrayList<>();

  public TrustedUserDto() { 
  }

  public TrustedUserDto trustedUserId(@javax.annotation.Nullable String trustedUserId) {
    this.trustedUserId = trustedUserId;
    return this;
  }

  /**
   * Get trustedUserId
   * @return trustedUserId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRUSTED_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrustedUserId() {
    return trustedUserId;
  }


  @JsonProperty(JSON_PROPERTY_TRUSTED_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrustedUserId(@javax.annotation.Nullable String trustedUserId) {
    this.trustedUserId = trustedUserId;
  }


  public TrustedUserDto signatureChain(@javax.annotation.Nullable List<String> signatureChain) {
    this.signatureChain = signatureChain;
    return this;
  }

  public TrustedUserDto addSignatureChainItem(String signatureChainItem) {
    if (this.signatureChain == null) {
      this.signatureChain = new ArrayList<>();
    }
    this.signatureChain.add(signatureChainItem);
    return this;
  }

  /**
   * Get signatureChain
   * @return signatureChain
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNATURE_CHAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSignatureChain() {
    return signatureChain;
  }


  @JsonProperty(JSON_PROPERTY_SIGNATURE_CHAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignatureChain(@javax.annotation.Nullable List<String> signatureChain) {
    this.signatureChain = signatureChain;
  }


  /**
   * Return true if this TrustedUserDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrustedUserDto trustedUserDto = (TrustedUserDto) o;
    return Objects.equals(this.trustedUserId, trustedUserDto.trustedUserId) &&
        Objects.equals(this.signatureChain, trustedUserDto.signatureChain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trustedUserId, signatureChain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrustedUserDto {\n");
    sb.append("    trustedUserId: ").append(toIndentedString(trustedUserId)).append("\n");
    sb.append("    signatureChain: ").append(toIndentedString(signatureChain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

